on late-fs
    # Tweak IO performance during boot up
    write /sys/block/sda/queue/iostats 0
    write /sys/block/sde/queue/iostats 0
    write /sys/block/sda/queue/scheduler noop
    write /sys/block/sde/queue/scheduler noop
    write /sys/block/sda/queue/iosched/slice_idle 0
    write /sys/block/sde/queue/iosched/slice_idle 0
    write /sys/block/sda/queue/nr_requests 256
    write /sys/block/sde/queue/nr_requests 256
    write /sys/block/sda/queue/read_ahead_kb 2048
    write /sys/block/sde/queue/read_ahead_kb 2048
    write /sys/block/dm-0/queue/read_ahead_kb 2048
    write /sys/block/dm-1/queue/read_ahead_kb 2048    

on boot
    # Update foreground and background cpusets
    write /dev/cpuset/top-app/cpus 0-3
    write /dev/cpuset/background/cpus 0-3
    write /dev/cpuset/foreground/cpus 0-3
    write /dev/cpuset/foreground/boost/cpus 0-3
    write /dev/cpuset/system-background/cpus 0-3
    write /dev/cpuset/restricted/cpus 0-3

    # Enable sched boost in boot
    write /proc/sys/kernel/sched_boost 1

on property:sys.boot_completed=1    
    # update cpusets now that boot is complete and we want better load balancing
    write /dev/cpuset/top-app/cpus 0-3
    write /dev/cpuset/background/cpus 0
    write /dev/cpuset/foreground/cpus 0-2
    write /dev/cpuset/foreground/boost/cpus 2-3
    write /dev/cpuset/system-background/cpus 0-1,3
    write /dev/cpuset/restricted/cpus 0-1

    # CHOWN/CHMOD
    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chown system system /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chown system system /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
    chown system system /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
    chown system system /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor

    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chmod 0664 /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq
    chmod 0664 /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq
    chmod 0664 /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor

    # Set I/O scheduler
    setprop sys.io.scheduler "maple"

    # Tweak IO performance after boot complete
    write /sys/block/sda/queue/iostats 1
    write /sys/block/sde/queue/iostats 1
    write /sys/block/sda/queue/scheduler maple
    write /sys/block/sde/queue/scheduler maple
    write /sys/block/dm-0/queue/scheduler maple
    write /sys/block/dm-1/queue/scheduler maple
    write /sys/block/sda/queue/nr_requests 128
    write /sys/block/sde/queue/nr_requests 128
    write /sys/block/sda/queue/read_ahead_kb 512
    write /sys/block/sde/queue/read_ahead_kb 512
    write /sys/block/dm-0/queue/read_ahead_kb 512
    write /sys/block/dm-1/queue/read_ahead_kb 512   

    # Disable Serial Console
    write /sys/module/printk/parameters/console_suspend N

    # according to Qcom this legacy value improves first launch latencies
    # stock value is 512k
    setprop dalvik.vm.heapminfree 2m

    # exec user scripts
    exec u:r:init:s0 -- /init.mcd.sh
    exec u:r:su:s0 root root -- /init.mcd.sh
    exec u:r:magisk:s0 root root -- /init.mcd.sh
    exec u:r:supersu:s0 root root -- /init.mcd.sh

    # write to dmsg
    write /dev/kmsg "mcd boot completed"

service msm_irqbalance /vendor/bin/msm_irqbalance -f /vendor/etc/msm_irqbalance.conf
    socket msm_irqbalance seqpacket 660 root system
    class core
    user root
    group root
    writepid /dev/cpuset/system-background/tasks
